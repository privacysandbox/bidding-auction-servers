build --announce_rc
build --verbose_failures
build --config=clang
build --compilation_mode=opt
build --output_filter='^//((?!(third_party):).)*$'
build --color=yes
build --workspace_status_command="bash tools/get_workspace_status"

build:run_all_tests --cache_test_results=no
test:run_all_tests --test_verbose_timeout_warnings

# Required to import opentelemetry with abseil
build --@io_opentelemetry_cpp//api:with_abseil
# Required to build OpenTelemtry with logs API.
# TODO(b/287675870): Delete the following when the feature is no longer experimental.
build --copt=-DENABLE_LOGS_PREVIEW
# Avoid linking to ICU shared libs for googleurl
build --@com_google_googleurl//build_config:system_icu=0

build:clang --config=cpp_no_warn
build:clang --cxxopt=-fbracket-depth=512
build:clang --client_env=CC=clang
build:clang --cxxopt=-std=c++17
build:clang --host_cxxopt=-std=c++17
build:clang --client_env=BAZEL_CXXOPTS=-std=c++17
# Makes thread safety analysis warnings into errors.
build:clang --copt=-Werror=thread-safety
# Disables the "int conversion" warning for external/nitrokmscli_aws_c_http/source/websocket_decoder.c
build:clang --per_file_copt=external/nitrokmscli_.*\.c@-Wno-int-conversion
build:clang --per_file_copt=api/.*_builder\.c@-Wno-deprecated-declarations
# https://github.com/google/tcmalloc/blob/master/docs/tuning.md#build-time-optimizations
build:clang --cxxopt=-fsized-deallocation
build:clang --host_cxxopt=-fsized-deallocation
build:clang --cxxopt=-fnew-alignment=8
build:clang --host_cxxopt=-fnew-alignment=8
build:clang --per_file_copt=api/udf/.*@-fconstexpr-steps=1271242
build:clang --per_file_copt=external/(json_c|nitrokmscli_).*\.c@-Wno-implicit-function-declaration

# Flag compiler warnings as errors.
build:cpp_no_warn --copt=-Werror
# Ignore warnings from Roma, zlib, differential privacy repo etc.
build:cpp_no_warn --per_file_copt=.*external/.*@-Wno-error
# Ignore deprecated declarations warnings from Roma, ProtectedAudience, Telemetry
build:cpp_no_warn --per_file_copt=(services|api/udf)/.*@-Wno-macro-redefined,-Wno-deprecated-declarations,-Wno-deprecated-builtins
build:cpp_no_warn --per_file_copt=tools/secure_invoke.*@-Wno-macro-redefined,-Wno-deprecated-declarations
# Telemetry has some unchecked results after registering observers.
build:cpp_no_warn --per_file_copt=services/.*_main.cc@-Wno-unused-result
build:cpp_no_warn --per_file_copt=services/common/telemetry/.*_test.cc@-Wno-unused-result
# Compiler complains about main function being unused in the micro-benchmarks.
build:cpp_no_warn --per_file_copt=services/.*_benchmarks.cc@-Wno-unused-function

# Enable clang-tidy
build:clang-tidy --aspects @bazel_clang_tidy//clang_tidy:clang_tidy.bzl%clang_tidy_aspect
build:clang-tidy --output_groups=report
build:clang-tidy --@bazel_clang_tidy//:clang_tidy_config=//:clang_tidy_config

test --test_verbose_timeout_warnings

# Address sanitizer, set action_env to segregate cache entries
build:asan --action_env=PRIVACY_SANDBOX_SERVERS_ASAN=1
build:asan --strip=never
build:asan --compilation_mode=dbg
build:asan --copt=-fsanitize=address
build:asan --copt=-DADDRESS_SANITIZER
build:asan --copt=-O1
build:asan --copt=-g
build:asan --copt=-fno-omit-frame-pointer
build:asan --linkopt=-fsanitize=address
build:asan --linkopt=-fuse-ld=lld
build:asan --action_env=ASAN_OPTIONS=detect_leaks=1:color=always
build:asan --custom_malloc=@bazel_tools//tools/cpp:malloc
build:asan --fission=yes

# Memory sanitizer, set action_env to segregate cache entries
build:msan --action_env=PRIVACY_SANDBOX_SERVERS_MSAN=1
build:msan --strip=never
build:msan --copt=-fsanitize=memory
build:msan --copt=-DMEMORY_SANITIZER
build:msan --copt=-g
build:msan --copt=-fno-omit-frame-pointer
build:msan --linkopt=-fsanitize=memory

# Undefined Behavior sanitizer, set action_env to segregate cache entries
build:ubsan --action_env=PRIVACY_SANDBOX_SERVERS_UBSAN=1
build:ubsan --strip=never
build:ubsan --copt=-fsanitize=undefined
build:ubsan --copt=-DUNDEFINED_BEHAVIOR_SANITIZER
build:ubsan --copt=-g
build:ubsan --copt=-fno-omit-frame-pointer
build:ubsan --linkopt=-fsanitize=undefined
build:ubsan --linkopt=-lubsan

# Thread sanitizer, set action_env to segregate cache entries
build:tsan --action_env=PRIVACY_SANDBOX_SERVERS_TSAN=1
build:tsan --strip=never
build:tsan --copt=-fsanitize=thread
build:tsan --copt=-fno-omit-frame-pointer
build:tsan --copt=-DGPR_NO_DIRECT_SYSCALLS
build:tsan --copt=-DGRPC_TSAN
build:tsan --copt=-g
build:tsan --linkopt=-fsanitize=thread
# This is needed to address false positive problem with abseil.
# https://github.com/google/sanitizers/issues/953
build:tsan --test_env=TSAN_OPTIONS=report_atomic_races=0

test:coretests --test_tag_filters=-flaky

build:small-tests --action_env=PRIVACY_SANDBOX_SERVERS_SMALL_TESTS=1
build:small-tests --compilation_mode=dbg
build:small-tests --fission=yes
test:small-tests --build_tests_only
test:small-tests --test_size_filters=-large,-enormous
test:small-tests --test_tag_filters=-requires-network
test:small-tests --runs_per_test=20
test:small-tests --flaky_test_attempts=2
test:small-tests --runs_per_test_detects_flakes
test:small-tests --test_summary=detailed

build:all-tests --action_env=PRIVACY_SANDBOX_SERVERS_ALL_TESTS=1
build:all-tests --compilation_mode=opt
test:all-tests --build_tests_only
test:all-tests --test_summary=detailed

try-import %workspace%/production/packaging/.bazelrc
try-import %workspace%/builders/.coverage.bazelrc
coverage --test_tag_filters=-flaky
