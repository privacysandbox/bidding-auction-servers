# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Building this Dockerfile requires the TARGETARCH arg to be set
# to amd64 or arm64 corresponding with the host CPU. TARGETARCH is
# set automatically if using BuildKit (`docker buildx`), or can be
# set explicitly using `--build-arg=TARGETARCH=<value>`.

#
# stage: build-tools
#
ARG PYTHON_BASE=python:3.13.1-bookworm

FROM ${PYTHON_BASE} AS compiler-tools
ARG CLANG_VER=18
ARG TARGETARCH

# Download and install Go (adjust version as needed)
ENV TZ=Etc/UTC \
    GO_VERSION=1.23.5
ADD https://dl.google.com/go/go${GO_VERSION}.linux-${TARGETARCH}.tar.gz /tmp/go.tar.gz

ENV PATH="/usr/local/go/bin:${PATH}"

ADD https://apt.llvm.org/llvm.sh /tmp/llvm.sh
RUN --mount=type=cache,sharing=locked,target=/var/lib/apt/lists \
  --mount=type=cache,sharing=locked,target=/var/cache/apt \
  rm -f /etc/apt/apt.conf.d/docker-clean \
  && apt-get update \
  && apt-get --quiet install -y --no-install-recommends \
  apt-transport-https ca-certificates locales lsb-release \
  && tar -C /usr/local -xzf /tmp/go.tar.gz \
  && rm /tmp/go.tar.gz

FROM compiler-tools AS build-tools
ARG TARGETARCH
ARG BAZELISK_VERSION=1.25.0

ENV GOPATH=/opt/go

# install bazelisk
RUN go install github.com/bazelbuild/bazelisk@v${BAZELISK_VERSION} \
  && ln -s ${GOPATH}/bin/bazelisk /usr/local/bin/bazel

#
# stage: bazel
#
FROM build-tools AS bazel

COPY .bazelversion docker_files/generate_system_bazelrc /tmp/

ENV BAZEL_ROOT=/bazel_root

# install specified bazel version
RUN cd /tmp \
  && touch WORKSPACE \
  && bazel version \
  && /tmp/generate_system_bazelrc \
  && rm -f WORKSPACE .bazelversion

#
# stage: build-and-test
#
FROM bazel AS build-and-test
ARG BAZEL_STARTUP_ARGS
ARG BAZEL_EXTRA_ARGS

ENV WORKSPACE=/workspace

COPY . /workspace

WORKDIR /workspace

RUN --mount=type=cache,target=/root/.cache/bazel \
  --mount=type=cache,target=/bazel_root/cost_tool \
  --mount=type=secret,id=gcloud,target=/etc/gcloud/application_default_credentials.json \
  bazel \
  ${BAZEL_STARTUP_ARGS} \
  test \
  --config=run_all_tests \
  ${BAZEL_EXTRA_ARGS} \
  -- \
  //...
