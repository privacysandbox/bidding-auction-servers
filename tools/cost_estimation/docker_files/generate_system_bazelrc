#!/bin/bash

# Generate a system bazelrc file
# Designed to be executed when generating a container image, for example from Dockerfile.
# For info on bazelrc files, refer to https://bazel.build/run/bazelrc?hl=en.

set -o pipefail
set -o errexit

function _get_toolchains_hash() {
    {
      # emit versions of all tools relevant to builds
      uname --machine
      cat /etc/os-release
      python3 --version
      go version
    } | sha256sum | cut --delimiter=" " --fields=1
}

readonly BAZELRC="/etc/bazel.bazelrc"
TOOLCHAINS_HASH=$(_get_toolchains_hash)
readonly TOOLCHAINS_HASH

if ! [[ -v BAZEL_ROOT ]]; then
  printf "BAZEL_ROOT env var not set. Exiting." &>/dev/stderr
  exit 1
fi
readonly BAZEL_OUTPUT_USER_ROOT="${BAZEL_ROOT}/cost_tool"
mkdir -p "${BAZEL_OUTPUT_USER_ROOT}"

printf "generating %s\n" "${BAZELRC}" &>/dev/stderr

# the output_user_root setting will have no effect as long as output_base is set. However, in the
# case that $HOME/.bazelrc is not created via sourcing /etc/profile.d/bazel_env.sh, at least
# the appropriate container-specific output_user_root directory will be used
cat <<BAZELRC >"${BAZELRC}"
startup --output_user_root="${BAZEL_OUTPUT_USER_ROOT}"
# set a variable based on the hash of all build tool dependencies other than bazel itself
# primarily to avoid spurious cache hits for distinct sets of toolchains
build --action_env=TOOLCHAINS_HASH=${TOOLCHAINS_HASH}
BAZELRC
